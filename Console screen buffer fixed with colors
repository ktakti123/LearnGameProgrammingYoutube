#include<stdio.h>
#include <windows.h>
int nScreenWidth = 120;
int nScreenHeight = 30;
SMALL_RECT dwBytesWritten = {0,0,120,30}; 
typedef struct _CONSOLE_FONT_INFOEX
{
 ULONG cbSize; DWORD nFont;COORD dwFontSize;UINT  FontFamily;
 UINT  FontWeight;WCHAR FaceName[LF_FACESIZE];
}CONSOLE_FONT_INFOEX, *PCONSOLE_FONT_INFOEX;

BOOL WINAPI SetCurrentConsoleFontEx(HANDLE h, BOOL b, PCONSOLE_FONT_INFOEX lp);


int main()
{
	int j = 0;
	COORD coordDest;
	coordDest.X = 0;
  coordDest.Y = 0;
  CONSOLE_FONT_INFOEX cfi={0};
  cfi.cbSize = sizeof(cfi);
	cfi.nFont = 0;
	cfi.dwFontSize.X = 8;
	cfi.dwFontSize.Y = 8;
	COORD charBufSize = {nScreenWidth,nScreenHeight};


	// Create Screen Buffer
	CHAR_INFO buffer[nScreenWidth*nScreenHeight];
	CHAR_INFO *screen = buffer;
	
	HANDLE hConsole = CreateConsoleScreenBuffer(GENERIC_READ | GENERIC_WRITE, 0, NULL, CONSOLE_TEXTMODE_BUFFER, NULL); 
	SetConsoleActiveScreenBuffer(hConsole);
	SetCurrentConsoleFontEx(hConsole, 1 , &cfi);
	while(1)
	{
		for (int i = 0 ; i < 3600; ++i)
    {
    	buffer[i].Char.AsciiChar = ' ';
			buffer[i].Attributes =  BACKGROUND_RED | BACKGROUND_INTENSITY;
    }
		WriteConsoleOutput(hConsole, screen,charBufSize, coordDest, &dwBytesWritten);
		
	}

	return 0;
}
